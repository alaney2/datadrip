import React, { useEffect, useState } from 'react';
import Head from 'next/head';
import { Card, CardActionArea, CardContent, CardMedia, Typography, Box } from '@mui/material';
import NavBar from '@/components/NavBar/NavBar';
import wikiConnections from '@/wiki-connections.json';
import Link from 'next/link';
import SkipLink from '@/components/SkipLink';
import { styled, useTheme } from '@mui/material/styles';
import { useMediaQuery } from '@mui/material';
import path from 'path';
import fs from 'fs';
import { shuffleArray } from '@/components/utilities';
import { getArticleDescription } from '@/components/utilities';
import BackToTop from '@/components/PageContent/BackToTop';
import Carousel from '@/components/Carousel.js';

const MAX_ARTICLES = 30;

export async function getStaticProps() {
  const shuffledArticles = shuffleArray(Object.entries(wikiConnections)).slice(0, MAX_ARTICLES);
  const articlesWithDescriptions = [];

  for (const [key, value] of shuffledArticles) {
    const filePath = path.join(process.cwd(), 'data', `${key}.md`);
    const fileContent = fs.readFileSync(filePath, 'utf8');
    const description = await getArticleDescription(fileContent);
    articlesWithDescriptions.push([key, { ...value, description }]);
  }

  return {
    props: {
      articles: articlesWithDescriptions,
    },
  };
}

const StyledContainer = styled('div')(({ theme }) => ({
  maxWidth: 1280,
  margin: '0 auto',
  padding: theme.spacing(2),
}));

const ColumnContainer = styled('div')(({ theme }) => ({
  columnGap: '32px',
  columnWidth: 'calc((100% - 64px) / 3)',
  marginBottom: '32px',
  breakInside: 'avoid',
  overflow: 'hidden',
  [theme.breakpoints.down('sm')]: {
    columnCount: 1,
  },
  [theme.breakpoints.between('sm', 'md')]: {
    columnCount: 2,
  },
  [theme.breakpoints.up('md')]: {
    columnCount: 3,
  },
}));


export default function Home({ articles }) {
  const theme = useTheme();
  const matchesSM = useMediaQuery(theme.breakpoints.down('sm'));
  const matchesMD = useMediaQuery(theme.breakpoints.between('sm', 'md'));
  const [numColumns, setNumColumns] = useState(3);

  useEffect(() => {
    if (matchesSM) {
      setNumColumns(1);
    } else if (matchesMD) {
      setNumColumns(2);
    } else {
      setNumColumns(3);
    }
  }, [matchesSM, matchesMD, theme]);

  return (
    <>
      <Head>
        <title>Data Drip</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <Box sx={{ height: '100vh' }}>
          <SkipLink skipToId="main-content" />
          <NavBar />
          <StyledContainer id="main-content" >
            <Box sx={{ mx: { xs: 4, lg: 8 }, my: 8 }}>
              <ColumnContainer>
                <Carousel articles={articles} numColumns={numColumns} />
              </ColumnContainer>
            </Box>
          </StyledContainer>
          <BackToTop />
        </Box>
      </main>
    </>
  );
}