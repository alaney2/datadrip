import React from 'react';
import { useState, useEffect } from 'react';
import Head from 'next/head';
import NavBar from '@/components/NavBar/NavBar';
import wikiConnections from '@/wiki-connections.json';
import Link from 'next/link';
import SkipLink from '@/components/SkipLink';
import { Card, CardActionArea, CardContent, CardMedia, Grid, Typography, Box } from '@mui/material';
import { styled, useTheme } from '@mui/material/styles';
import path from 'path';
import fs from 'fs';
import { shuffleArray } from '@/components/utilities';
import { getArticleDescription } from '@/components/utilities';


const MAX_ARTICLES = 24;

export async function getStaticProps() {
  const shuffledArticles = shuffleArray(Object.entries(wikiConnections));
  const articlesWithDescriptions = [];

  for (const [key, value] of shuffledArticles.slice(0, MAX_ARTICLES)) {
    const filePath = path.join(process.cwd(), 'data', `${key}.md`);
    const fileContent = fs.readFileSync(filePath, 'utf8');
    const description = await getArticleDescription(fileContent);
    articlesWithDescriptions.push([key, { ...value, description }]);
  }

  return {
    props: {
      articles: articlesWithDescriptions,
    },
  };
}

const StyledContainer = styled('div')(({ theme }) => ({
  maxWidth: 1280,
  margin: '0 auto',
  padding: theme.spacing(2),
}));

export default function Home({ articles }) {  
  return (
    <>
      <Head>
        <title>Data Drip</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <SkipLink skipToId="main-content" />
        <NavBar />
        <StyledContainer id="main-content" >
          <h1 style={{ marginLeft: '5rem' }}>Random</h1>
          <Box sx={{ flexGrow: 1, justifyContent: 'center', alignContent: 'center', alignItems: 'center', mx: 8, my: 4 }}>
            <Grid container spacing={4} display="flex" justifyContent="center" >
              {articles.map(([key, value]) => (
                <Grid item xs={12} sm={6} lg={4} key={key}>
                  <Link href={`/${key}`} key={key} passHref>
                    <Card sx={{ px: 2, maxHeight: 200, minHeight: 200, cursor: 'pointer', boxShadow: '0 0 11px rgba(33,33,33,.15)', '&:hover': { boxShadow: '0 0 11px rgba(33,33,33,.25)', } }}>
                      {/* <CardActionArea> */}
                        <CardContent>
                          <Typography gutterBottom variant="h5" component="div" noWrap>
                            {value.title}
                          </Typography>
                          <Typography variant="body1" color="text.secondary" >
                            {value.description}
                          </Typography>
                        </CardContent>
                      {/* </CardActionArea> */}
                    </Card>
                  </Link>
                </Grid>
              ))}
            </Grid>
          </Box>
        </StyledContainer>
      </main>
    </>
  );
}
